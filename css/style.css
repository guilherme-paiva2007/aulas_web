* {
    margin: 0;
    transition: 0.3s;
}

*::selection {
    color: var(--white);
    background-color: var(--mainColorVar1_reverse);
}

html {
    background-color: var(--mainColorVar1);
}

body {
    display: flex;
    flex-direction: column;
    height: 100vh;
    overflow-y: hidden;
}

body.overflow {
    overflow-y: scroll;
}

/* Main and Sidebar */
main {
    width: 100%;
    height: 100%;
    background-color: var(--lightCFilter3);
}

#sidebar {
    padding: 40px 20px;
    background-color: var(--reverseCFilter2);
    width: 15%;
    color: white;
}

#div-sidebarMain {
    display: flex;
    gap: 24px;
    height: max-content;
    height: 100%;
    width: 100vw;
    overflow: hidden;
    overflow-y: auto;
}

#div-sidebarMain main, #div-sidebarMain #sidebar {
    overflow-y: auto;
}

#sidebar article {
    display: flex;
    padding: 0;
    justify-content: space-between;
}

#sidebar .summary-heading1 { text-indent: 0; }
#sidebar .summary-heading2 { margin-left: 0.5em; }
#sidebar .summary-heading3 { text-indent: 1em; }
#sidebar .summary-heading4 { text-indent: 1.5em; }
#sidebar .summary-heading5 { text-indent: 2em; }
#sidebar .summary-heading6 { text-indent: 2.5em; }

/* Header */
header {
    display: grid;
    grid-template-columns: 1fr 2fr 1.5fr;
    grid-template-areas: "empty img nav";
    background-color: var(--mainColorVar1);
    padding: 12px 4px;
    position: sticky;
    top: 0;
}

header img, header .imagemInexistente {
    grid-area: img;
}

header nav {
    grid-area: nav;
    display: flex;
    align-items: center;
}

header svg {
    height: var(--headerSVGSize);
    width: var(--headerSVGSize);
    pointer-events: none;
    border-radius: var(--buttonBorderRadius);
}

/* Inputs, Selects and Buttons */

input {
    background-color: var(--mainColorVar2);
    border-radius: var(--textBorderRadius);
    border-color: var(--mainColorVar2_reverse);
    border-style: solid;
    padding: var(--textPadding);
}

input:placeholder-shown {
    background-color: var(--mainColorVar2_darkTheme) !important;
    border-color: var(--mainColorVar2_lightTheme) !important;
}

input:hover, input:focus {
    outline-color: var(--mainColor_reverse);
    outline-style: solid;
    transition: 0s;
}

input:invalid {
    background-color: var(--mainColorVar2_darkTheme);
    border-color: var(--mainColorVar2_lightTheme);
}

input:valid {
    background-color: var(--mainColorVar2_lightTheme);
    border-color: var(--mainColorVar2_darkTheme);
}

input.genericColor {
    border-color: var(--blueVar2_reverse);
}

input.genericColor:placeholder-shown {
    background-color: var(--blueVar2_darkTheme) !important;
    border-color: var(--blueVar2_lightTheme) !important;
}

input.genericColor:hover, input.genericColor:focus {
    outline-color: var(--blue_reverse);
}

input.genericColor:invalid {
    background-color: var(--redVar2_darkTheme);
    border-color: var(--redVar2_lightTheme);
    outline-color: var(--redVar1_reverse);
}

input.genericColor:valid {
    background-color: var(--blueVar2_lightTheme);
    border-color: var(--blueVar2_darkTheme);
}

button {
    color: var(--white);
    font-weight: bold;
    background-color: transparent;
    border: 0;
    padding: var(--buttonPadding);
    border-radius: var(--buttonBorderRadius);
    text-decoration: none;
    display: flex;
    align-items: center;
    outline: none;
}

button *:not(span) {
    display: inline;
    height: var(--headerSVGSize);
}

button span {
    margin-left: 0.5em;
}

button:hover:not(.button-ignoreHover), button:focus:not(.button-ignoreHover) {
    background-color: var(--mainColorVar1_reverse);
}

/* Media Queries */
@media (max-width: 600px) {
    .mediaSmall-hide {
        width: 0px;
        overflow: hidden;
    }
}

@media (max-width: 420px) {

}


/* Tests */
div.displayContainer {
    display: flex;
    padding: 10px;
}

div.translucidContainer {
    background-color: cadetblue;
    color: purple
}

div.displayBlock {
    width: 100px;
    height: 100px;
    display: flex;
    justify-content: center;
    align-items: center;
}

div.line {
    display: flex;
    flex-wrap: wrap;
}

div.line.control {
    padding: 12px 4px;
}

div.line.control select {
    padding: 4px;
    margin: 0 12px;
}

body.colorDisplay {
    min-height: 100vh;
    min-width: fit-content;
}

body.colorDisplay select {
    outline-color: var(--mainColor_reverse);
    border-color: var(--mainColor);
    border-radius: var(--textBorderRadius);
}

html.darkTheme body.colorDisplay {
    color: white;
}

html.darkTheme body.colorDisplay div[style*="reverseC"] {
    color: black;
}

html.lightTheme body.colorDisplay div[style*="reverseC"] {
    color: white;
}

@media (max-width: 420px) {
    body.colorDisplay {
        height: 100vh;
    }
    div.displayContainer {
        flex-wrap: wrap;
        justify-content: center;
    }
    div.displayBlock {
        height: auto;
        padding: 12px 0;
    }
}

@media (max-height: 420px) {
    body.colorDisplay {
        height: 100vh;
    }
    div.displayContainer {
        flex-wrap: wrap;
        justify-content: center;
    }
    div.displayBlock {
        height: auto;
        padding: 8px 0;
    }
    div.line {
        flex-direction: row;
        flex-wrap: nowrap;
    }
    body.colorDisplay header {
        padding-top: 2px;
        padding-bottom: 2px;
    }
}

.positionBox {
    height: 50vh;
    width: 50vh;
    position: relative;
    margin: auto;
    border: 2px solid var(--mainColor);
}

.positionBox_inside {
    position: absolute;
}

.htmlSimulator {
    background-color: var(--mainColorVar1);
    height: 50vh;
}

.bodySimulator {
    background-color: var(--lightCFilter3);
    height: 100%;
}

.provisoreButtons {
    position: sticky;
    top: 0;
}